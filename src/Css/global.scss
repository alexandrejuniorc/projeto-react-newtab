// cores 

  $cor-principal: #363856;
  $cor-background: #2d314d; 
  $cor-botao: #EFEFEF;
  $cor-fechar: #e54 ;
  $cor-preta: #000;
  $cor-branca: #fff;
  $cor-amarela: #d0d54b;
  $cor-verde: #4aaf74;

//fontes
$fonte-1: 'Roboto', sans-serif;

// Função pra fonte ficar com o tamanho de em
@function em($pixel, $contexto: 16) {
  @return $pixel / $contexto + em;
}

//mixins 

// Mixin de tipografia
@mixin tipo-1($tamanho) {
  font-family: $fonte-1;
  @if $tamanho == 18 {
    font-size: em(18);
    line-height: em(30, 18);
    // Tem que ser passado o valor anterior do line-height em pixels e o valor que quer que seja em (em) para que funcione e transforma em 18px só que com a formatação de (em)
  }
}

// Mixin de sombra
// se passar (...) vai passar mais de um valor que eu quiser
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

// Breakpoints
$dispositivo-desktop: 1200px; // Dispositivo desktop
$dispositivo-tablet: 760px; // Dispositivo tablet
$dispositivo-mobile: 480px; // Dispositivo mobile

// Mixin de media-querie (responsivo)
@mixin responsivo($size) {
  @if $size == desktop {
    // Foi utilizado #{} para pegar o número da variável corretamente
    @media screen and (min-width: #{$dispositivo-desktop}) {
      @content; // Conteúdo que eu quero aqui dentro
    }
  } @else if $size == tablet {
    @media screen and (min-width: #{$dispositivo-tablet}) and (max-width: #{$dispositivo-desktop - 1}) {
      @content; // Conteúdo que eu quero aqui dentro
    }
  } @else if $size == mobile {
    @media screen and (max-width: #{$dispositivo-tablet - 1}) {
      @content; // Conteúdo que eu quero aqui dentro
    }
  }
}

